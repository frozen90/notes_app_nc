type Notes @model
  @key(name: "byFolderId", fields: ["folderID", "content"])
  @key(name: "notesByDate", fields:["type","createdAt"], queryField:"notesByDate") @auth(rules:[{allow: owner}]){
  id: ID!
  type: String!
  title: String!
  content: String!
  password: String
  locked: Boolean
  createdAt: String!
  folderID: ID
}

type Folder @model @auth(rules:[{allow: owner}]){
  id: ID!
  title: String!
  notes: [Notes] @connection(keyName: "byFolderId", fields:["id"])
}

type SharedNote @model @key(name: "byLink", fields: ["link", "id"], queryField: "notesByLink"){
  id: ID!
  link: String
  title: String
  content: String
  expire_date:AWSDateTime
  password: String
}

type PlannedDates @model @auth(rules:[{allow: owner}]){
  id: ID!
  date:AWSDate
  events: [Events] @connection(keyName: "byDateId", fields:["id"])

}

type Events @model   
  @key(name: "byDateId", fields: ["plannedDateId", "content"])
  @key(name: "eventsByDate", fields:["type","date"], queryField:"eventsByDate") 
  @auth(rules:[{allow: owner}]){
  id: ID!
  date: AWSDateTime!
  type: String!
  title: String!
  content: String!
  plannedDateId: ID!
}